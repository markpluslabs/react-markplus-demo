{"mappings":"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","sources":["<anon>","node_modules/mermaid/dist/chunks/mermaid.esm/stateDiagram-JHBGUSAC.mjs","node_modules/mermaid/dist/chunks/mermaid.esm/chunk-KGVUR73X.mjs","node_modules/mermaid/dist/chunks/mermaid.esm/chunk-EOAU2GW5.mjs"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"6SvnF\", function(module, exports) {\n\n$parcel$export(module.exports, \"diagram\", () => $16c4a9f3037559eb$export$6118d022d940d562);\n\nvar $aEpQ8 = parcelRequire(\"aEpQ8\");\nparcelRequire(\"aWPVB\");\nparcelRequire(\"ir7Vu\");\nparcelRequire(\"cFbSz\");\nparcelRequire(\"03fqf\");\nparcelRequire(\"1pQ54\");\nparcelRequire(\"1il17\");\nparcelRequire(\"ej8sY\");\nparcelRequire(\"ci84p\");\n\nvar $1x80i = parcelRequire(\"1x80i\");\n\nvar $4kWfH = parcelRequire(\"4kWfH\");\n\nvar $fo0kP = parcelRequire(\"fo0kP\");\nparcelRequire(\"1OUid\");\n\nvar $7hgA6 = parcelRequire(\"7hgA6\");\nparcelRequire(\"76RTQ\");\nparcelRequire(\"f34bP\");\nparcelRequire(\"2266r\");\n\nvar $7xxrv = parcelRequire(\"7xxrv\");\n// src/diagrams/state/id-cache.js\nvar $16c4a9f3037559eb$var$idCache = {};\nvar $16c4a9f3037559eb$var$set = /* @__PURE__ */ (0, $7xxrv.__name)((key, val)=>{\n    $16c4a9f3037559eb$var$idCache[key] = val;\n}, \"set\");\nvar $16c4a9f3037559eb$var$get = /* @__PURE__ */ (0, $7xxrv.__name)((k)=>$16c4a9f3037559eb$var$idCache[k], \"get\");\nvar $16c4a9f3037559eb$var$keys = /* @__PURE__ */ (0, $7xxrv.__name)(()=>Object.keys($16c4a9f3037559eb$var$idCache), \"keys\");\nvar $16c4a9f3037559eb$var$size = /* @__PURE__ */ (0, $7xxrv.__name)(()=>$16c4a9f3037559eb$var$keys().length, \"size\");\nvar $16c4a9f3037559eb$var$id_cache_default = {\n    get: $16c4a9f3037559eb$var$get,\n    set: $16c4a9f3037559eb$var$set,\n    keys: $16c4a9f3037559eb$var$keys,\n    size: $16c4a9f3037559eb$var$size\n};\n// src/diagrams/state/shapes.js\nvar $16c4a9f3037559eb$var$drawStartState = /* @__PURE__ */ (0, $7xxrv.__name)((g)=>g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", (0, $7hgA6.getConfig2)().state.sizeUnit).attr(\"cx\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit).attr(\"cy\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit), \"drawStartState\");\nvar $16c4a9f3037559eb$var$drawDivider = /* @__PURE__ */ (0, $7xxrv.__name)((g)=>g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", (0, $7hgA6.getConfig2)().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", (0, $7hgA6.getConfig2)().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar $16c4a9f3037559eb$var$drawSimpleState = /* @__PURE__ */ (0, $7xxrv.__name)((g, stateDef)=>{\n    const state = g.append(\"text\").attr(\"x\", 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", (0, $7hgA6.getConfig2)().state.textHeight + 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"font-size\", (0, $7hgA6.getConfig2)().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n    const classBox = state.node().getBBox();\n    g.insert(\"rect\", \":first-child\").attr(\"x\", (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", (0, $7hgA6.getConfig2)().state.padding).attr(\"width\", classBox.width + 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"height\", classBox.height + 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"rx\", (0, $7hgA6.getConfig2)().state.radius);\n    return state;\n}, \"drawSimpleState\");\nvar $16c4a9f3037559eb$var$drawDescrState = /* @__PURE__ */ (0, $7xxrv.__name)((g, stateDef)=>{\n    const addTspan = /* @__PURE__ */ (0, $7xxrv.__name)(function(textEl, txt, isFirst2) {\n        const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * (0, $7hgA6.getConfig2)().state.padding).text(txt);\n        if (!isFirst2) tSpan.attr(\"dy\", (0, $7hgA6.getConfig2)().state.textHeight);\n    }, \"addTspan\");\n    const title = g.append(\"text\").attr(\"x\", 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", (0, $7hgA6.getConfig2)().state.textHeight + 1.3 * (0, $7hgA6.getConfig2)().state.padding).attr(\"font-size\", (0, $7hgA6.getConfig2)().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n    const titleBox = title.node().getBBox();\n    const titleHeight = titleBox.height;\n    const description = g.append(\"text\").attr(\"x\", (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", titleHeight + (0, $7hgA6.getConfig2)().state.padding * 0.4 + (0, $7hgA6.getConfig2)().state.dividerMargin + (0, $7hgA6.getConfig2)().state.textHeight).attr(\"class\", \"state-description\");\n    let isFirst = true;\n    let isSecond = true;\n    stateDef.descriptions.forEach(function(descr) {\n        if (!isFirst) {\n            addTspan(description, descr, isSecond);\n            isSecond = false;\n        }\n        isFirst = false;\n    });\n    const descrLine = g.append(\"line\").attr(\"x1\", (0, $7hgA6.getConfig2)().state.padding).attr(\"y1\", (0, $7hgA6.getConfig2)().state.padding + titleHeight + (0, $7hgA6.getConfig2)().state.dividerMargin / 2).attr(\"y2\", (0, $7hgA6.getConfig2)().state.padding + titleHeight + (0, $7hgA6.getConfig2)().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n    const descrBox = description.node().getBBox();\n    const width = Math.max(descrBox.width, titleBox.width);\n    descrLine.attr(\"x2\", width + 3 * (0, $7hgA6.getConfig2)().state.padding);\n    g.insert(\"rect\", \":first-child\").attr(\"x\", (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", (0, $7hgA6.getConfig2)().state.padding).attr(\"width\", width + 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * (0, $7hgA6.getConfig2)().state.padding).attr(\"rx\", (0, $7hgA6.getConfig2)().state.radius);\n    return g;\n}, \"drawDescrState\");\nvar $16c4a9f3037559eb$var$addTitleAndBox = /* @__PURE__ */ (0, $7xxrv.__name)((g, stateDef, altBkg)=>{\n    const pad = (0, $7hgA6.getConfig2)().state.padding;\n    const dblPad = 2 * (0, $7hgA6.getConfig2)().state.padding;\n    const orgBox = g.node().getBBox();\n    const orgWidth = orgBox.width;\n    const orgX = orgBox.x;\n    const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", (0, $7hgA6.getConfig2)().state.titleShift).attr(\"font-size\", (0, $7hgA6.getConfig2)().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n    const titleBox = title.node().getBBox();\n    const titleWidth = titleBox.width + dblPad;\n    let width = Math.max(titleWidth, orgWidth);\n    if (width === orgWidth) width = width + dblPad;\n    let startX;\n    const graphBox = g.node().getBBox();\n    stateDef.doc;\n    startX = orgX - pad;\n    if (titleWidth > orgWidth) startX = (orgWidth - width) / 2 + pad;\n    if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) startX = orgX - (titleWidth - orgWidth) / 2;\n    const lineY = 1 - (0, $7hgA6.getConfig2)().state.textHeight;\n    g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\"height\", graphBox.height + (0, $7hgA6.getConfig2)().state.textHeight + (0, $7hgA6.getConfig2)().state.titleShift + 1).attr(\"rx\", \"0\");\n    title.attr(\"x\", startX + pad);\n    if (titleWidth <= orgWidth) title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n    g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", (0, $7hgA6.getConfig2)().state.titleShift - (0, $7hgA6.getConfig2)().state.textHeight - (0, $7hgA6.getConfig2)().state.padding).attr(\"width\", width).attr(\"height\", (0, $7hgA6.getConfig2)().state.textHeight * 3).attr(\"rx\", (0, $7hgA6.getConfig2)().state.radius);\n    g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", (0, $7hgA6.getConfig2)().state.titleShift - (0, $7hgA6.getConfig2)().state.textHeight - (0, $7hgA6.getConfig2)().state.padding).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * (0, $7hgA6.getConfig2)().state.textHeight).attr(\"rx\", (0, $7hgA6.getConfig2)().state.radius);\n    return g;\n}, \"addTitleAndBox\");\nvar $16c4a9f3037559eb$var$drawEndState = /* @__PURE__ */ (0, $7xxrv.__name)((g)=>{\n    g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", (0, $7hgA6.getConfig2)().state.sizeUnit + (0, $7hgA6.getConfig2)().state.miniPadding).attr(\"cx\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit + (0, $7hgA6.getConfig2)().state.miniPadding).attr(\"cy\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit + (0, $7hgA6.getConfig2)().state.miniPadding);\n    return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", (0, $7hgA6.getConfig2)().state.sizeUnit).attr(\"cx\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit + 2).attr(\"cy\", (0, $7hgA6.getConfig2)().state.padding + (0, $7hgA6.getConfig2)().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar $16c4a9f3037559eb$var$drawForkJoinState = /* @__PURE__ */ (0, $7xxrv.__name)((g, stateDef)=>{\n    let width = (0, $7hgA6.getConfig2)().state.forkWidth;\n    let height = (0, $7hgA6.getConfig2)().state.forkHeight;\n    if (stateDef.parentId) {\n        let tmp = width;\n        width = height;\n        height = tmp;\n    }\n    return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", (0, $7hgA6.getConfig2)().state.padding).attr(\"y\", (0, $7hgA6.getConfig2)().state.padding);\n}, \"drawForkJoinState\");\nvar $16c4a9f3037559eb$var$_drawLongText = /* @__PURE__ */ (0, $7xxrv.__name)((_text, x, y, g)=>{\n    let textHeight = 0;\n    const textElem = g.append(\"text\");\n    textElem.style(\"text-anchor\", \"start\");\n    textElem.attr(\"class\", \"noteText\");\n    let text = _text.replace(/\\r\\n/g, \"<br/>\");\n    text = text.replace(/\\n/g, \"<br/>\");\n    const lines = text.split((0, $7hgA6.common_default).lineBreakRegex);\n    let tHeight = 1.25 * (0, $7hgA6.getConfig2)().state.noteMargin;\n    for (const line of lines){\n        const txt = line.trim();\n        if (txt.length > 0) {\n            const span = textElem.append(\"tspan\");\n            span.text(txt);\n            if (tHeight === 0) {\n                const textBounds = span.node().getBBox();\n                tHeight += textBounds.height;\n            }\n            textHeight += tHeight;\n            span.attr(\"x\", x + (0, $7hgA6.getConfig2)().state.noteMargin);\n            span.attr(\"y\", y + textHeight + 1.25 * (0, $7hgA6.getConfig2)().state.noteMargin);\n        }\n    }\n    return {\n        textWidth: textElem.node().getBBox().width,\n        textHeight: textHeight\n    };\n}, \"_drawLongText\");\nvar $16c4a9f3037559eb$var$drawNote = /* @__PURE__ */ (0, $7xxrv.__name)((text, g)=>{\n    g.attr(\"class\", \"state-note\");\n    const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", (0, $7hgA6.getConfig2)().state.padding);\n    const rectElem = g.append(\"g\");\n    const { textWidth: textWidth, textHeight: textHeight } = $16c4a9f3037559eb$var$_drawLongText(text, 0, 0, rectElem);\n    note.attr(\"height\", textHeight + 2 * (0, $7hgA6.getConfig2)().state.noteMargin);\n    note.attr(\"width\", textWidth + (0, $7hgA6.getConfig2)().state.noteMargin * 2);\n    return note;\n}, \"drawNote\");\nvar $16c4a9f3037559eb$var$drawState = /* @__PURE__ */ (0, $7xxrv.__name)(function(elem, stateDef) {\n    const id = stateDef.id;\n    const stateInfo = {\n        id: id,\n        label: stateDef.id,\n        width: 0,\n        height: 0\n    };\n    const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n    if (stateDef.type === \"start\") $16c4a9f3037559eb$var$drawStartState(g);\n    if (stateDef.type === \"end\") $16c4a9f3037559eb$var$drawEndState(g);\n    if (stateDef.type === \"fork\" || stateDef.type === \"join\") $16c4a9f3037559eb$var$drawForkJoinState(g, stateDef);\n    if (stateDef.type === \"note\") $16c4a9f3037559eb$var$drawNote(stateDef.note.text, g);\n    if (stateDef.type === \"divider\") $16c4a9f3037559eb$var$drawDivider(g);\n    if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) $16c4a9f3037559eb$var$drawSimpleState(g, stateDef);\n    if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) $16c4a9f3037559eb$var$drawDescrState(g, stateDef);\n    const stateBox = g.node().getBBox();\n    stateInfo.width = stateBox.width + 2 * (0, $7hgA6.getConfig2)().state.padding;\n    stateInfo.height = stateBox.height + 2 * (0, $7hgA6.getConfig2)().state.padding;\n    $16c4a9f3037559eb$var$id_cache_default.set(id, stateInfo);\n    return stateInfo;\n}, \"drawState\");\nvar $16c4a9f3037559eb$var$edgeCount = 0;\nvar $16c4a9f3037559eb$var$drawEdge = /* @__PURE__ */ (0, $7xxrv.__name)(function(elem, path, relation) {\n    const getRelationType = /* @__PURE__ */ (0, $7xxrv.__name)(function(type) {\n        switch(type){\n            case (0, $aEpQ8.stateDb_default).relationType.AGGREGATION:\n                return \"aggregation\";\n            case (0, $aEpQ8.stateDb_default).relationType.EXTENSION:\n                return \"extension\";\n            case (0, $aEpQ8.stateDb_default).relationType.COMPOSITION:\n                return \"composition\";\n            case (0, $aEpQ8.stateDb_default).relationType.DEPENDENCY:\n                return \"dependency\";\n        }\n    }, \"getRelationType\");\n    path.points = path.points.filter((p)=>!Number.isNaN(p.y));\n    const lineData = path.points;\n    const lineFunction = (0, $7hgA6.line_default)().x(function(d) {\n        return d.x;\n    }).y(function(d) {\n        return d.y;\n    }).curve((0, $7hgA6.basis_default));\n    const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + $16c4a9f3037559eb$var$edgeCount).attr(\"class\", \"transition\");\n    let url = \"\";\n    if ((0, $7hgA6.getConfig2)().state.arrowMarkerAbsolute) {\n        url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n        url = url.replace(/\\(/g, \"\\\\(\");\n        url = url.replace(/\\)/g, \"\\\\)\");\n    }\n    svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + getRelationType((0, $aEpQ8.stateDb_default).relationType.DEPENDENCY) + \"End)\");\n    if (relation.title !== void 0) {\n        const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n        const { x: x, y: y } = (0, $fo0kP.utils_default).calcLabelPosition(path.points);\n        const rows = (0, $7hgA6.common_default).getRows(relation.title);\n        let titleHeight = 0;\n        const titleRows = [];\n        let maxWidth = 0;\n        let minX = 0;\n        for(let i = 0; i <= rows.length; i++){\n            const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n            const boundsTmp = title.node().getBBox();\n            maxWidth = Math.max(maxWidth, boundsTmp.width);\n            minX = Math.min(minX, boundsTmp.x);\n            (0, $7hgA6.log).info(boundsTmp.x, x, y + titleHeight);\n            if (titleHeight === 0) {\n                const titleBox = title.node().getBBox();\n                titleHeight = titleBox.height;\n                (0, $7hgA6.log).info(\"Title height\", titleHeight, y);\n            }\n            titleRows.push(title);\n        }\n        let boxHeight = titleHeight * rows.length;\n        if (rows.length > 1) {\n            const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n            titleRows.forEach((title, i)=>title.attr(\"y\", y + i * titleHeight - heightAdj));\n            boxHeight = titleHeight * rows.length;\n        }\n        const bounds = label.node().getBBox();\n        label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - (0, $7hgA6.getConfig2)().state.padding / 2).attr(\"y\", y - boxHeight / 2 - (0, $7hgA6.getConfig2)().state.padding / 2 - 3.5).attr(\"width\", maxWidth + (0, $7hgA6.getConfig2)().state.padding).attr(\"height\", boxHeight + (0, $7hgA6.getConfig2)().state.padding);\n        (0, $7hgA6.log).info(bounds);\n    }\n    $16c4a9f3037559eb$var$edgeCount++;\n}, \"drawEdge\");\n// src/diagrams/state/stateRenderer.js\nvar $16c4a9f3037559eb$var$conf;\nvar $16c4a9f3037559eb$var$transformationLog = {};\nvar $16c4a9f3037559eb$var$setConf = /* @__PURE__ */ (0, $7xxrv.__name)(function() {}, \"setConf\");\nvar $16c4a9f3037559eb$var$insertMarkers = /* @__PURE__ */ (0, $7xxrv.__name)(function(elem) {\n    elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar $16c4a9f3037559eb$var$draw = /* @__PURE__ */ (0, $7xxrv.__name)(function(text, id, _version, diagObj) {\n    $16c4a9f3037559eb$var$conf = (0, $7hgA6.getConfig2)().state;\n    const securityLevel = (0, $7hgA6.getConfig2)().securityLevel;\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, $7hgA6.select_default)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? (0, $7hgA6.select_default)(sandboxElement.nodes()[0].contentDocument.body) : (0, $7hgA6.select_default)(\"body\");\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    (0, $7hgA6.log).debug(\"Rendering diagram \" + text);\n    const diagram2 = root.select(`[id='${id}']`);\n    $16c4a9f3037559eb$var$insertMarkers(diagram2);\n    const rootDoc = diagObj.db.getRootDoc();\n    $16c4a9f3037559eb$var$renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n    const padding = $16c4a9f3037559eb$var$conf.padding;\n    const bounds = diagram2.node().getBBox();\n    const width = bounds.width + padding * 2;\n    const height = bounds.height + padding * 2;\n    const svgWidth = width * 1.75;\n    (0, $7hgA6.configureSvgSize)(diagram2, height, svgWidth, $16c4a9f3037559eb$var$conf.useMaxWidth);\n    diagram2.attr(\"viewBox\", `${bounds.x - $16c4a9f3037559eb$var$conf.padding}  ${bounds.y - $16c4a9f3037559eb$var$conf.padding} ` + width + \" \" + height);\n}, \"draw\");\nvar $16c4a9f3037559eb$var$getLabelWidth = /* @__PURE__ */ (0, $7xxrv.__name)((text)=>{\n    return text ? text.length * $16c4a9f3037559eb$var$conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar $16c4a9f3037559eb$var$renderDoc = /* @__PURE__ */ (0, $7xxrv.__name)((doc, diagram2, parentId, altBkg, root, domDocument, diagObj)=>{\n    const graph = new (0, $4kWfH.Graph)({\n        compound: true,\n        multigraph: true\n    });\n    let i;\n    let edgeFreeDoc = true;\n    for(i = 0; i < doc.length; i++)if (doc[i].stmt === \"relation\") {\n        edgeFreeDoc = false;\n        break;\n    }\n    if (parentId) graph.setGraph({\n        rankdir: \"LR\",\n        multigraph: true,\n        compound: true,\n        // acyclicer: 'greedy',\n        ranker: \"tight-tree\",\n        ranksep: edgeFreeDoc ? 1 : $16c4a9f3037559eb$var$conf.edgeLengthFactor,\n        nodeSep: edgeFreeDoc ? 1 : 50,\n        isMultiGraph: true\n    });\n    else graph.setGraph({\n        rankdir: \"TB\",\n        multigraph: true,\n        compound: true,\n        // isCompound: true,\n        // acyclicer: 'greedy',\n        // ranker: 'longest-path'\n        ranksep: edgeFreeDoc ? 1 : $16c4a9f3037559eb$var$conf.edgeLengthFactor,\n        nodeSep: edgeFreeDoc ? 1 : 50,\n        ranker: \"tight-tree\",\n        // ranker: 'network-simplex'\n        isMultiGraph: true\n    });\n    graph.setDefaultEdgeLabel(function() {\n        return {};\n    });\n    diagObj.db.extract(doc);\n    const states = diagObj.db.getStates();\n    const relations = diagObj.db.getRelations();\n    const keys2 = Object.keys(states);\n    let first = true;\n    for (const key of keys2){\n        const stateDef = states[key];\n        if (parentId) stateDef.parentId = parentId;\n        let node;\n        if (stateDef.doc) {\n            let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n            node = $16c4a9f3037559eb$var$renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n            if (first) {\n                sub = $16c4a9f3037559eb$var$addTitleAndBox(sub, stateDef, altBkg);\n                let boxBounds = sub.node().getBBox();\n                node.width = boxBounds.width;\n                node.height = boxBounds.height + $16c4a9f3037559eb$var$conf.padding / 2;\n                $16c4a9f3037559eb$var$transformationLog[stateDef.id] = {\n                    y: $16c4a9f3037559eb$var$conf.compositTitleSize\n                };\n            } else {\n                let boxBounds = sub.node().getBBox();\n                node.width = boxBounds.width;\n                node.height = boxBounds.height;\n            }\n        } else node = $16c4a9f3037559eb$var$drawState(diagram2, stateDef, graph);\n        if (stateDef.note) {\n            const noteDef = {\n                descriptions: [],\n                id: stateDef.id + \"-note\",\n                note: stateDef.note,\n                type: \"note\"\n            };\n            const note = $16c4a9f3037559eb$var$drawState(diagram2, noteDef, graph);\n            if (stateDef.note.position === \"left of\") {\n                graph.setNode(node.id + \"-note\", note);\n                graph.setNode(node.id, node);\n            } else {\n                graph.setNode(node.id, node);\n                graph.setNode(node.id + \"-note\", note);\n            }\n            graph.setParent(node.id, node.id + \"-group\");\n            graph.setParent(node.id + \"-note\", node.id + \"-group\");\n        } else graph.setNode(node.id, node);\n    }\n    (0, $7hgA6.log).debug(\"Count=\", graph.nodeCount(), graph);\n    let cnt = 0;\n    relations.forEach(function(relation) {\n        cnt++;\n        (0, $7hgA6.log).debug(\"Setting edge\", relation);\n        graph.setEdge(relation.id1, relation.id2, {\n            relation: relation,\n            width: $16c4a9f3037559eb$var$getLabelWidth(relation.title),\n            height: $16c4a9f3037559eb$var$conf.labelHeight * (0, $7hgA6.common_default).getRows(relation.title).length,\n            labelpos: \"c\"\n        }, \"id\" + cnt);\n    });\n    (0, $1x80i.layout)(graph);\n    (0, $7hgA6.log).debug(\"Graph after layout\", graph.nodes());\n    const svgElem = diagram2.node();\n    graph.nodes().forEach(function(v) {\n        if (v !== void 0 && graph.node(v) !== void 0) {\n            (0, $7hgA6.log).warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n            root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"transform\", \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + ($16c4a9f3037559eb$var$transformationLog[v] ? $16c4a9f3037559eb$var$transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\");\n            root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n            const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n            dividers.forEach((divider)=>{\n                const parent = divider.parentElement;\n                let pWidth = 0;\n                let pShift = 0;\n                if (parent) {\n                    if (parent.parentElement) pWidth = parent.parentElement.getBBox().width;\n                    pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n                    if (Number.isNaN(pShift)) pShift = 0;\n                }\n                divider.setAttribute(\"x1\", 0 - pShift + 8);\n                divider.setAttribute(\"x2\", pWidth - pShift - 8);\n            });\n        } else (0, $7hgA6.log).debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    });\n    let stateBox = svgElem.getBBox();\n    graph.edges().forEach(function(e) {\n        if (e !== void 0 && graph.edge(e) !== void 0) {\n            (0, $7hgA6.log).debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n            $16c4a9f3037559eb$var$drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n        }\n    });\n    stateBox = svgElem.getBBox();\n    const stateInfo = {\n        id: parentId ? parentId : \"root\",\n        label: parentId ? parentId : \"root\",\n        width: 0,\n        height: 0\n    };\n    stateInfo.width = stateBox.width + 2 * $16c4a9f3037559eb$var$conf.padding;\n    stateInfo.height = stateBox.height + 2 * $16c4a9f3037559eb$var$conf.padding;\n    (0, $7hgA6.log).debug(\"Doc rendered\", stateInfo, graph);\n    return stateInfo;\n}, \"renderDoc\");\nvar $16c4a9f3037559eb$var$stateRenderer_default = {\n    setConf: $16c4a9f3037559eb$var$setConf,\n    draw: $16c4a9f3037559eb$var$draw\n};\n// src/diagrams/state/stateDiagram.ts\nvar $16c4a9f3037559eb$export$6118d022d940d562 = {\n    parser: (0, $aEpQ8.stateDiagram_default),\n    db: (0, $aEpQ8.stateDb_default),\n    renderer: $16c4a9f3037559eb$var$stateRenderer_default,\n    styles: (0, $aEpQ8.styles_default),\n    init: /* @__PURE__ */ (0, $7xxrv.__name)((cnf)=>{\n        if (!cnf.state) cnf.state = {};\n        cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n        (0, $aEpQ8.stateDb_default).clear();\n    }, \"init\")\n};\n\n});\nparcelRegister(\"aWPVB\", function(module, exports) {\n\n$parcel$export(module.exports, \"getDiagramElement\", () => $0ad40731095607ca$export$c1032a1a4db1d3b5);\n$parcel$export(module.exports, \"setupViewPortForSVG\", () => $0ad40731095607ca$export$ac3e321d5cd8dcb4);\n\nvar $7hgA6 = parcelRequire(\"7hgA6\");\n\nvar $7xxrv = parcelRequire(\"7xxrv\");\n// src/rendering-util/insertElementsForSize.js\nvar $0ad40731095607ca$export$c1032a1a4db1d3b5 = /* @__PURE__ */ (0, $7xxrv.__name)((id, securityLevel)=>{\n    let sandboxElement;\n    if (securityLevel === \"sandbox\") sandboxElement = (0, $7hgA6.select_default)(\"#i\" + id);\n    const root = securityLevel === \"sandbox\" ? (0, $7hgA6.select_default)(sandboxElement.nodes()[0].contentDocument.body) : (0, $7hgA6.select_default)(\"body\");\n    const svg = root.select(`[id=\"${id}\"]`);\n    return svg;\n}, \"getDiagramElement\");\n// src/rendering-util/setupViewPortForSVG.ts\nvar $0ad40731095607ca$export$ac3e321d5cd8dcb4 = /* @__PURE__ */ (0, $7xxrv.__name)((svg, padding, cssDiagram, useMaxWidth)=>{\n    svg.attr(\"class\", cssDiagram);\n    const { width: width, height: height, x: x, y: y } = $0ad40731095607ca$var$calculateDimensionsWithPadding(svg, padding);\n    (0, $7hgA6.configureSvgSize)(svg, height, width, useMaxWidth);\n    const viewBox = $0ad40731095607ca$var$createViewBox(x, y, width, height, padding);\n    svg.attr(\"viewBox\", viewBox);\n    (0, $7hgA6.log).debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar $0ad40731095607ca$var$calculateDimensionsWithPadding = /* @__PURE__ */ (0, $7xxrv.__name)((svg, padding)=>{\n    const bounds = svg.node()?.getBBox() || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n    };\n    return {\n        width: bounds.width + padding * 2,\n        height: bounds.height + padding * 2,\n        x: bounds.x,\n        y: bounds.y\n    };\n}, \"calculateDimensionsWithPadding\");\nvar $0ad40731095607ca$var$createViewBox = /* @__PURE__ */ (0, $7xxrv.__name)((x, y, width, height, padding)=>{\n    return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\n});\n\nparcelRegister(\"4kWfH\", function(module, exports) {\n\n$parcel$export(module.exports, \"Graph\", () => $ef9c1902765cb47b$export$614db49f3febe941);\n\nvar $76RTQ = parcelRequire(\"76RTQ\");\n\nvar $f34bP = parcelRequire(\"f34bP\");\n\nvar $2266r = parcelRequire(\"2266r\");\n\nvar $7xxrv = parcelRequire(\"7xxrv\");\n// ../../node_modules/.pnpm/dagre-d3-es@7.0.11/node_modules/dagre-d3-es/src/graphlib/graph.js\nvar $ef9c1902765cb47b$var$DEFAULT_EDGE_NAME = \"\\0\";\nvar $ef9c1902765cb47b$var$GRAPH_NODE = \"\\0\";\nvar $ef9c1902765cb47b$var$EDGE_KEY_DELIM = \"\u0001\";\nvar $ef9c1902765cb47b$export$614db49f3febe941 = class {\n    static{\n        (0, $7xxrv.__name)(this, \"Graph\");\n    }\n    constructor(opts = {}){\n        this._isDirected = Object.prototype.hasOwnProperty.call(opts, \"directed\") ? opts.directed : true;\n        this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, \"multigraph\") ? opts.multigraph : false;\n        this._isCompound = Object.prototype.hasOwnProperty.call(opts, \"compound\") ? opts.compound : false;\n        this._label = void 0;\n        this._defaultNodeLabelFn = (0, $2266r.constant_default)(void 0);\n        this._defaultEdgeLabelFn = (0, $2266r.constant_default)(void 0);\n        this._nodes = {};\n        if (this._isCompound) {\n            this._parent = {};\n            this._children = {};\n            this._children[$ef9c1902765cb47b$var$GRAPH_NODE] = {};\n        }\n        this._in = {};\n        this._preds = {};\n        this._out = {};\n        this._sucs = {};\n        this._edgeObjs = {};\n        this._edgeLabels = {};\n    }\n    /* === Graph functions ========= */ isDirected() {\n        return this._isDirected;\n    }\n    isMultigraph() {\n        return this._isMultigraph;\n    }\n    isCompound() {\n        return this._isCompound;\n    }\n    setGraph(label) {\n        this._label = label;\n        return this;\n    }\n    graph() {\n        return this._label;\n    }\n    /* === Node functions ========== */ setDefaultNodeLabel(newDefault) {\n        if (!(0, $2266r.isFunction_default)(newDefault)) newDefault = (0, $2266r.constant_default)(newDefault);\n        this._defaultNodeLabelFn = newDefault;\n        return this;\n    }\n    nodeCount() {\n        return this._nodeCount;\n    }\n    nodes() {\n        return (0, $76RTQ.keys_default)(this._nodes);\n    }\n    sources() {\n        var self = this;\n        return (0, $76RTQ.filter_default)(this.nodes(), function(v) {\n            return (0, $f34bP.isEmpty_default)(self._in[v]);\n        });\n    }\n    sinks() {\n        var self = this;\n        return (0, $76RTQ.filter_default)(this.nodes(), function(v) {\n            return (0, $f34bP.isEmpty_default)(self._out[v]);\n        });\n    }\n    setNodes(vs, value) {\n        var args = arguments;\n        var self = this;\n        (0, $76RTQ.forEach_default)(vs, function(v) {\n            if (args.length > 1) self.setNode(v, value);\n            else self.setNode(v);\n        });\n        return this;\n    }\n    setNode(v, value) {\n        if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n            if (arguments.length > 1) this._nodes[v] = value;\n            return this;\n        }\n        this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n        if (this._isCompound) {\n            this._parent[v] = $ef9c1902765cb47b$var$GRAPH_NODE;\n            this._children[v] = {};\n            this._children[$ef9c1902765cb47b$var$GRAPH_NODE][v] = true;\n        }\n        this._in[v] = {};\n        this._preds[v] = {};\n        this._out[v] = {};\n        this._sucs[v] = {};\n        ++this._nodeCount;\n        return this;\n    }\n    node(v) {\n        return this._nodes[v];\n    }\n    hasNode(v) {\n        return Object.prototype.hasOwnProperty.call(this._nodes, v);\n    }\n    removeNode(v) {\n        if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n            var removeEdge = /* @__PURE__ */ (0, $7xxrv.__name)((e)=>this.removeEdge(this._edgeObjs[e]), \"removeEdge\");\n            delete this._nodes[v];\n            if (this._isCompound) {\n                this._removeFromParentsChildList(v);\n                delete this._parent[v];\n                (0, $76RTQ.forEach_default)(this.children(v), (child)=>{\n                    this.setParent(child);\n                });\n                delete this._children[v];\n            }\n            (0, $76RTQ.forEach_default)((0, $76RTQ.keys_default)(this._in[v]), removeEdge);\n            delete this._in[v];\n            delete this._preds[v];\n            (0, $76RTQ.forEach_default)((0, $76RTQ.keys_default)(this._out[v]), removeEdge);\n            delete this._out[v];\n            delete this._sucs[v];\n            --this._nodeCount;\n        }\n        return this;\n    }\n    setParent(v, parent) {\n        if (!this._isCompound) throw new Error(\"Cannot set parent in a non-compound graph\");\n        if ((0, $76RTQ.isUndefined_default)(parent)) parent = $ef9c1902765cb47b$var$GRAPH_NODE;\n        else {\n            parent += \"\";\n            for(var ancestor = parent; !(0, $76RTQ.isUndefined_default)(ancestor); ancestor = this.parent(ancestor)){\n                if (ancestor === v) throw new Error(\"Setting \" + parent + \" as parent of \" + v + \" would create a cycle\");\n            }\n            this.setNode(parent);\n        }\n        this.setNode(v);\n        this._removeFromParentsChildList(v);\n        this._parent[v] = parent;\n        this._children[parent][v] = true;\n        return this;\n    }\n    _removeFromParentsChildList(v) {\n        delete this._children[this._parent[v]][v];\n    }\n    parent(v) {\n        if (this._isCompound) {\n            var parent = this._parent[v];\n            if (parent !== $ef9c1902765cb47b$var$GRAPH_NODE) return parent;\n        }\n    }\n    children(v) {\n        if ((0, $76RTQ.isUndefined_default)(v)) v = $ef9c1902765cb47b$var$GRAPH_NODE;\n        if (this._isCompound) {\n            var children = this._children[v];\n            if (children) return (0, $76RTQ.keys_default)(children);\n        } else if (v === $ef9c1902765cb47b$var$GRAPH_NODE) return this.nodes();\n        else if (this.hasNode(v)) return [];\n    }\n    predecessors(v) {\n        var predsV = this._preds[v];\n        if (predsV) return (0, $76RTQ.keys_default)(predsV);\n    }\n    successors(v) {\n        var sucsV = this._sucs[v];\n        if (sucsV) return (0, $76RTQ.keys_default)(sucsV);\n    }\n    neighbors(v) {\n        var preds = this.predecessors(v);\n        if (preds) return (0, $76RTQ.union_default)(preds, this.successors(v));\n    }\n    isLeaf(v) {\n        var neighbors;\n        if (this.isDirected()) neighbors = this.successors(v);\n        else neighbors = this.neighbors(v);\n        return neighbors.length === 0;\n    }\n    filterNodes(filter) {\n        var copy = new this.constructor({\n            directed: this._isDirected,\n            multigraph: this._isMultigraph,\n            compound: this._isCompound\n        });\n        copy.setGraph(this.graph());\n        var self = this;\n        (0, $76RTQ.forEach_default)(this._nodes, function(value, v) {\n            if (filter(v)) copy.setNode(v, value);\n        });\n        (0, $76RTQ.forEach_default)(this._edgeObjs, function(e) {\n            if (copy.hasNode(e.v) && copy.hasNode(e.w)) copy.setEdge(e, self.edge(e));\n        });\n        var parents = {};\n        function findParent(v) {\n            var parent = self.parent(v);\n            if (parent === void 0 || copy.hasNode(parent)) {\n                parents[v] = parent;\n                return parent;\n            } else if (parent in parents) return parents[parent];\n            else return findParent(parent);\n        }\n        (0, $7xxrv.__name)(findParent, \"findParent\");\n        if (this._isCompound) (0, $76RTQ.forEach_default)(copy.nodes(), function(v) {\n            copy.setParent(v, findParent(v));\n        });\n        return copy;\n    }\n    /* === Edge functions ========== */ setDefaultEdgeLabel(newDefault) {\n        if (!(0, $2266r.isFunction_default)(newDefault)) newDefault = (0, $2266r.constant_default)(newDefault);\n        this._defaultEdgeLabelFn = newDefault;\n        return this;\n    }\n    edgeCount() {\n        return this._edgeCount;\n    }\n    edges() {\n        return (0, $76RTQ.values_default)(this._edgeObjs);\n    }\n    setPath(vs, value) {\n        var self = this;\n        var args = arguments;\n        (0, $76RTQ.reduce_default)(vs, function(v, w) {\n            if (args.length > 1) self.setEdge(v, w, value);\n            else self.setEdge(v, w);\n            return w;\n        });\n        return this;\n    }\n    /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */ setEdge() {\n        var v, w, name, value;\n        var valueSpecified = false;\n        var arg0 = arguments[0];\n        if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n            v = arg0.v;\n            w = arg0.w;\n            name = arg0.name;\n            if (arguments.length === 2) {\n                value = arguments[1];\n                valueSpecified = true;\n            }\n        } else {\n            v = arg0;\n            w = arguments[1];\n            name = arguments[3];\n            if (arguments.length > 2) {\n                value = arguments[2];\n                valueSpecified = true;\n            }\n        }\n        v = \"\" + v;\n        w = \"\" + w;\n        if (!(0, $76RTQ.isUndefined_default)(name)) name = \"\" + name;\n        var e = $ef9c1902765cb47b$var$edgeArgsToId(this._isDirected, v, w, name);\n        if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n            if (valueSpecified) this._edgeLabels[e] = value;\n            return this;\n        }\n        if (!(0, $76RTQ.isUndefined_default)(name) && !this._isMultigraph) throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n        this.setNode(v);\n        this.setNode(w);\n        this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n        var edgeObj = $ef9c1902765cb47b$var$edgeArgsToObj(this._isDirected, v, w, name);\n        v = edgeObj.v;\n        w = edgeObj.w;\n        Object.freeze(edgeObj);\n        this._edgeObjs[e] = edgeObj;\n        $ef9c1902765cb47b$var$incrementOrInitEntry(this._preds[w], v);\n        $ef9c1902765cb47b$var$incrementOrInitEntry(this._sucs[v], w);\n        this._in[w][e] = edgeObj;\n        this._out[v][e] = edgeObj;\n        this._edgeCount++;\n        return this;\n    }\n    edge(v, w, name) {\n        var e = arguments.length === 1 ? $ef9c1902765cb47b$var$edgeObjToId(this._isDirected, arguments[0]) : $ef9c1902765cb47b$var$edgeArgsToId(this._isDirected, v, w, name);\n        return this._edgeLabels[e];\n    }\n    hasEdge(v, w, name) {\n        var e = arguments.length === 1 ? $ef9c1902765cb47b$var$edgeObjToId(this._isDirected, arguments[0]) : $ef9c1902765cb47b$var$edgeArgsToId(this._isDirected, v, w, name);\n        return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n    }\n    removeEdge(v, w, name) {\n        var e = arguments.length === 1 ? $ef9c1902765cb47b$var$edgeObjToId(this._isDirected, arguments[0]) : $ef9c1902765cb47b$var$edgeArgsToId(this._isDirected, v, w, name);\n        var edge = this._edgeObjs[e];\n        if (edge) {\n            v = edge.v;\n            w = edge.w;\n            delete this._edgeLabels[e];\n            delete this._edgeObjs[e];\n            $ef9c1902765cb47b$var$decrementOrRemoveEntry(this._preds[w], v);\n            $ef9c1902765cb47b$var$decrementOrRemoveEntry(this._sucs[v], w);\n            delete this._in[w][e];\n            delete this._out[v][e];\n            this._edgeCount--;\n        }\n        return this;\n    }\n    inEdges(v, u) {\n        var inV = this._in[v];\n        if (inV) {\n            var edges = (0, $76RTQ.values_default)(inV);\n            if (!u) return edges;\n            return (0, $76RTQ.filter_default)(edges, function(edge) {\n                return edge.v === u;\n            });\n        }\n    }\n    outEdges(v, w) {\n        var outV = this._out[v];\n        if (outV) {\n            var edges = (0, $76RTQ.values_default)(outV);\n            if (!w) return edges;\n            return (0, $76RTQ.filter_default)(edges, function(edge) {\n                return edge.w === w;\n            });\n        }\n    }\n    nodeEdges(v, w) {\n        var inEdges = this.inEdges(v, w);\n        if (inEdges) return inEdges.concat(this.outEdges(v, w));\n    }\n};\n$ef9c1902765cb47b$export$614db49f3febe941.prototype._nodeCount = 0;\n$ef9c1902765cb47b$export$614db49f3febe941.prototype._edgeCount = 0;\nfunction $ef9c1902765cb47b$var$incrementOrInitEntry(map, k) {\n    if (map[k]) map[k]++;\n    else map[k] = 1;\n}\n(0, $7xxrv.__name)($ef9c1902765cb47b$var$incrementOrInitEntry, \"incrementOrInitEntry\");\nfunction $ef9c1902765cb47b$var$decrementOrRemoveEntry(map, k) {\n    if (!--map[k]) delete map[k];\n}\n(0, $7xxrv.__name)($ef9c1902765cb47b$var$decrementOrRemoveEntry, \"decrementOrRemoveEntry\");\nfunction $ef9c1902765cb47b$var$edgeArgsToId(isDirected, v_, w_, name) {\n    var v = \"\" + v_;\n    var w = \"\" + w_;\n    if (!isDirected && v > w) {\n        var tmp = v;\n        v = w;\n        w = tmp;\n    }\n    return v + $ef9c1902765cb47b$var$EDGE_KEY_DELIM + w + $ef9c1902765cb47b$var$EDGE_KEY_DELIM + ((0, $76RTQ.isUndefined_default)(name) ? $ef9c1902765cb47b$var$DEFAULT_EDGE_NAME : name);\n}\n(0, $7xxrv.__name)($ef9c1902765cb47b$var$edgeArgsToId, \"edgeArgsToId\");\nfunction $ef9c1902765cb47b$var$edgeArgsToObj(isDirected, v_, w_, name) {\n    var v = \"\" + v_;\n    var w = \"\" + w_;\n    if (!isDirected && v > w) {\n        var tmp = v;\n        v = w;\n        w = tmp;\n    }\n    var edgeObj = {\n        v: v,\n        w: w\n    };\n    if (name) edgeObj.name = name;\n    return edgeObj;\n}\n(0, $7xxrv.__name)($ef9c1902765cb47b$var$edgeArgsToObj, \"edgeArgsToObj\");\nfunction $ef9c1902765cb47b$var$edgeObjToId(isDirected, edgeObj) {\n    return $ef9c1902765cb47b$var$edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n(0, $7xxrv.__name)($ef9c1902765cb47b$var$edgeObjToId, \"edgeObjToId\");\n\n});\n\n\n\n//# sourceMappingURL=stateDiagram-JHBGUSAC.62f6d67f.js.map\n","import {\n  stateDb_default,\n  stateDiagram_default,\n  styles_default\n} from \"./chunk-AE24M7GS.mjs\";\nimport \"./chunk-KGVUR73X.mjs\";\nimport \"./chunk-3UPVGKO7.mjs\";\nimport \"./chunk-FQ64OR5F.mjs\";\nimport \"./chunk-E5O2ULER.mjs\";\nimport \"./chunk-VKJI5BFR.mjs\";\nimport \"./chunk-SVWLYT5M.mjs\";\nimport \"./chunk-U274GMTD.mjs\";\nimport \"./chunk-F2NGE46Y.mjs\";\nimport {\n  layout\n} from \"./chunk-IHYUGLNO.mjs\";\nimport {\n  Graph\n} from \"./chunk-EOAU2GW5.mjs\";\nimport {\n  utils_default\n} from \"./chunk-TVJ2DRIE.mjs\";\nimport \"./chunk-GKOISANM.mjs\";\nimport {\n  basis_default,\n  common_default,\n  configureSvgSize,\n  getConfig2 as getConfig,\n  line_default,\n  log,\n  select_default\n} from \"./chunk-M7TDSP4I.mjs\";\nimport \"./chunk-TGZYFRKZ.mjs\";\nimport \"./chunk-GRZAG2UZ.mjs\";\nimport \"./chunk-HD3LK5B5.mjs\";\nimport {\n  __name\n} from \"./chunk-DLQEHMXD.mjs\";\n\n// src/diagrams/state/id-cache.js\nvar idCache = {};\nvar set = /* @__PURE__ */ __name((key, val) => {\n  idCache[key] = val;\n}, \"set\");\nvar get = /* @__PURE__ */ __name((k) => idCache[k], \"get\");\nvar keys = /* @__PURE__ */ __name(() => Object.keys(idCache), \"keys\");\nvar size = /* @__PURE__ */ __name(() => keys().length, \"size\");\nvar id_cache_default = {\n  get,\n  set,\n  keys,\n  size\n};\n\n// src/diagrams/state/shapes.js\nvar drawStartState = /* @__PURE__ */ __name((g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */ __name((g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */ __name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */ __name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */ __name(function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */ __name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {\n  }\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */ __name((g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */ __name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */ __name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line of lines) {\n    const txt = line.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */ __name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */ __name(function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  id_cache_default.set(id, stateInfo);\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */ __name(function(elem, path, relation) {\n  const getRelationType = /* @__PURE__ */ __name(function(type) {\n    switch (type) {\n      case stateDb_default.relationType.AGGREGATION:\n        return \"aggregation\";\n      case stateDb_default.relationType.EXTENSION:\n        return \"extension\";\n      case stateDb_default.relationType.COMPOSITION:\n        return \"composition\";\n      case stateDb_default.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line_default().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(basis_default);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(stateDb_default.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */ __name(function() {\n}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */ __name(function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */ __name(function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select_default(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select_default(sandboxElement.nodes()[0].contentDocument.body) : select_default(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */ __name((text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */ __name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  let first = true;\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common_default.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  db: stateDb_default,\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    stateDb_default.clear();\n  }, \"init\")\n};\nexport {\n  diagram\n};\n","import {\n  configureSvgSize,\n  log,\n  select_default\n} from \"./chunk-M7TDSP4I.mjs\";\nimport {\n  __name\n} from \"./chunk-DLQEHMXD.mjs\";\n\n// src/rendering-util/insertElementsForSize.js\nvar getDiagramElement = /* @__PURE__ */ __name((id, securityLevel) => {\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select_default(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select_default(sandboxElement.nodes()[0].contentDocument.body) : select_default(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  return svg;\n}, \"getDiagramElement\");\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */ __name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const { width, height, x, y } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */ __name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || { width: 0, height: 0, x: 0, y: 0 };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */ __name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\nexport {\n  getDiagramElement,\n  setupViewPortForSVG\n};\n","import {\n  filter_default,\n  forEach_default,\n  isUndefined_default,\n  keys_default,\n  reduce_default,\n  union_default,\n  values_default\n} from \"./chunk-TGZYFRKZ.mjs\";\nimport {\n  isEmpty_default\n} from \"./chunk-GRZAG2UZ.mjs\";\nimport {\n  constant_default,\n  isFunction_default\n} from \"./chunk-HD3LK5B5.mjs\";\nimport {\n  __name\n} from \"./chunk-DLQEHMXD.mjs\";\n\n// ../../node_modules/.pnpm/dagre-d3-es@7.0.11/node_modules/dagre-d3-es/src/graphlib/graph.js\nvar DEFAULT_EDGE_NAME = \"\\0\";\nvar GRAPH_NODE = \"\\0\";\nvar EDGE_KEY_DELIM = \"\u0001\";\nvar Graph = class {\n  static {\n    __name(this, \"Graph\");\n  }\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, \"directed\") ? opts.directed : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, \"multigraph\") ? opts.multigraph : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, \"compound\") ? opts.compound : false;\n    this._label = void 0;\n    this._defaultNodeLabelFn = constant_default(void 0);\n    this._defaultEdgeLabelFn = constant_default(void 0);\n    this._nodes = {};\n    if (this._isCompound) {\n      this._parent = {};\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n    this._in = {};\n    this._preds = {};\n    this._out = {};\n    this._sucs = {};\n    this._edgeObjs = {};\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!isFunction_default(newDefault)) {\n      newDefault = constant_default(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return keys_default(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return filter_default(this.nodes(), function(v) {\n      return isEmpty_default(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return filter_default(this.nodes(), function(v) {\n      return isEmpty_default(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    forEach_default(vs, function(v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = /* @__PURE__ */ __name((e) => this.removeEdge(this._edgeObjs[e]), \"removeEdge\");\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        forEach_default(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      forEach_default(keys_default(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      forEach_default(keys_default(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error(\"Cannot set parent in a non-compound graph\");\n    }\n    if (isUndefined_default(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      parent += \"\";\n      for (var ancestor = parent; !isUndefined_default(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error(\"Setting \" + parent + \" as parent of \" + v + \" would create a cycle\");\n        }\n      }\n      this.setNode(parent);\n    }\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (isUndefined_default(v)) {\n      v = GRAPH_NODE;\n    }\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return keys_default(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return keys_default(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return keys_default(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return union_default(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound\n    });\n    copy.setGraph(this.graph());\n    var self = this;\n    forEach_default(this._nodes, function(value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n    forEach_default(this._edgeObjs, function(e) {\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === void 0 || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n    __name(findParent, \"findParent\");\n    if (this._isCompound) {\n      forEach_default(copy.nodes(), function(v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!isFunction_default(newDefault)) {\n      newDefault = constant_default(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return values_default(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    reduce_default(vs, function(v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n    if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n    v = \"\" + v;\n    w = \"\" + w;\n    if (!isUndefined_default(name)) {\n      name = \"\" + name;\n    }\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n    if (!isUndefined_default(name) && !this._isMultigraph) {\n      throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n    }\n    this.setNode(v);\n    this.setNode(w);\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    v = edgeObj.v;\n    w = edgeObj.w;\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = values_default(inV);\n      if (!u) {\n        return edges;\n      }\n      return filter_default(edges, function(edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = values_default(outV);\n      if (!w) {\n        return edges;\n      }\n      return filter_default(edges, function(edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n};\nGraph.prototype._nodeCount = 0;\nGraph.prototype._edgeCount = 0;\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n__name(incrementOrInitEntry, \"incrementOrInitEntry\");\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n__name(decrementOrRemoveEntry, \"decrementOrRemoveEntry\");\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (isUndefined_default(name) ? DEFAULT_EDGE_NAME : name);\n}\n__name(edgeArgsToId, \"edgeArgsToId\");\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v, w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n__name(edgeArgsToObj, \"edgeArgsToObj\");\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n__name(edgeObjToId, \"edgeObjToId\");\n\nexport {\n  Graph\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$16c4a9f3037559eb$export$6118d022d940d562","$16c4a9f3037559eb$var$conf","$aEpQ8","$1x80i","$4kWfH","$fo0kP","$7hgA6","$7xxrv","$16c4a9f3037559eb$var$idCache","$16c4a9f3037559eb$var$set","__name","key","val","$16c4a9f3037559eb$var$keys","k","keys","$16c4a9f3037559eb$var$drawStartState","length","g","append","attr","getConfig2","state","sizeUnit","padding","$16c4a9f3037559eb$var$drawDivider","style","textHeight","$16c4a9f3037559eb$var$drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","$16c4a9f3037559eb$var$drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","titleBox","title","descriptions","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","$16c4a9f3037559eb$var$addTitleAndBox","altBkg","startX","pad","dblPad","orgBox","orgWidth","orgX","x","titleShift","titleWidth","graphBox","doc","abs","lineY","$16c4a9f3037559eb$var$drawEndState","miniPadding","$16c4a9f3037559eb$var$drawForkJoinState","forkWidth","forkHeight","parentId","tmp","$16c4a9f3037559eb$var$_drawLongText","_text","y","textElem","replace","lines","split","common_default","lineBreakRegex","tHeight","noteMargin","line","trim","span","textBounds","textWidth","$16c4a9f3037559eb$var$drawNote","note","$16c4a9f3037559eb$var$drawState","elem","stateInfo","label","type","stateBox","$16c4a9f3037559eb$var$id_cache_default","$16c4a9f3037559eb$var$edgeCount","$16c4a9f3037559eb$var$drawEdge","path","relation","getRelationType","stateDb_default","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","p","Number","isNaN","lineData","lineFunction","line_default","d","curve","basis_default","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","utils_default","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundsTmp","min","log","info","push","boxHeight","heightAdj","bounds","$16c4a9f3037559eb$var$transformationLog","$16c4a9f3037559eb$var$setConf","$16c4a9f3037559eb$var$insertMarkers","$16c4a9f3037559eb$var$draw","_version","diagObj","sandboxElement","securityLevel","select_default","root","nodes","contentDocument","body","document","debug","diagram2","select","$16c4a9f3037559eb$var$renderDoc","db","getRootDoc","configureSvgSize","useMaxWidth","$16c4a9f3037559eb$var$getLabelWidth","fontSizeFactor","domDocument","graph","Graph","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","extract","states","getStates","relations","getRelations","sub","boxBounds","compositTitleSize","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","layout","svgElem","warn","JSON","stringify","dividers","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","edge","w","parser","stateDiagram_default","renderer","setConf","draw","styles","styles_default","init","cnf","clear","$0ad40731095607ca$export$c1032a1a4db1d3b5","$0ad40731095607ca$export$ac3e321d5cd8dcb4","svg","cssDiagram","$0ad40731095607ca$var$calculateDimensionsWithPadding","viewBox","$0ad40731095607ca$var$createViewBox","$ef9c1902765cb47b$export$614db49f3febe941","$76RTQ","$f34bP","$2266r","constructor","opts","_isDirected","prototype","hasOwnProperty","call","directed","_isMultigraph","_isCompound","_label","_defaultNodeLabelFn","constant_default","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isDirected","isMultigraph","isCompound","setDefaultNodeLabel","newDefault","isFunction_default","_nodeCount","keys_default","sources","self","filter_default","isEmpty_default","sinks","setNodes","vs","value","args","arguments","forEach_default","hasNode","removeNode","removeEdge","_removeFromParentsChildList","children","child","Error","isUndefined_default","ancestor","predecessors","predsV","successors","sucsV","neighbors","preds","union_default","isLeaf","filterNodes","copy","parents","findParent","edgeCount","_edgeCount","values_default","setPath","reduce_default","name","valueSpecified","arg0","$ef9c1902765cb47b$var$edgeArgsToId","edgeObj","$ef9c1902765cb47b$var$edgeArgsToObj","freeze","$ef9c1902765cb47b$var$incrementOrInitEntry","$ef9c1902765cb47b$var$edgeObjToId","hasEdge","$ef9c1902765cb47b$var$decrementOrRemoveEntry","inEdges","u","inV","outEdges","outV","nodeEdges","concat","map","v_","w_"],"version":3,"file":"stateDiagram-JHBGUSAC.62f6d67f.js.map"}